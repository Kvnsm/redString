# This workflow will build a Java project with Maven and analyze it with SonarCloud

name: Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn clean verify -B -DskipTests=false -Dspring.profiles.active=test-postgres
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    - name: Run Sonar Analysis
      uses: actions/setup-java@v1
      with:
        project-key: Kvnsm_redString
        organization: kvnsm
        token: ${{ secrets.SONAR_TOKEN }}
        flags: '--define sonar.analysis.mode=preview'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate code coverage report
      run: mvn clean verify -B -DskipTests=false -Dspring.profiles.active=test-postgres sonar:sonar -Dsonar.projectKey=Kvnsm_redString -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=kvnsm
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
